{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { of, map, interval, fromEvent, toArray } from 'rxjs';\nlet ObservableComponent = class ObservableComponent {\n  constructor() {}\n\n  ngOnInit() {\n    const obaaj = of(['absar', 'ahmad', 'ahmaaad']); // const obaaj = of(['absar', 'ahmad', 'ahmaaad']);\n\n    obaaj.pipe(toArray()).subscribe(data => {\n      console.log(data);\n      this.print2(data);\n    });\n    const broadcast = interval(1000);\n    this.sub1 = broadcast.pipe(map(data => 'absar' + data)).subscribe(res => {\n      this.msg1 = res;\n    });\n    setTimeout(() => {\n      this.sub1.unsubscribe();\n    }, 10000);\n  }\n\n  ngAfterViewInit() {\n    let count = 1;\n    fromEvent(this.addbtn.nativeElement, 'click').subscribe(res => {\n      let countval = 'absar' + count++;\n      this.print(countval);\n    });\n  }\n\n  print(val) {\n    let el = document.createElement('li');\n    el.innerText = val;\n    document.getElementById('licontainer').appendChild(el);\n  }\n\n  print2(val) {\n    let el = document.createElement('li');\n    el.innerText = val;\n    document.getElementById('licontainer2').appendChild(el);\n  }\n\n};\n\n__decorate([ViewChild('addbtn'), __metadata(\"design:type\", ElementRef)], ObservableComponent.prototype, \"addbtn\", void 0);\n\nObservableComponent = __decorate([Component({\n  selector: 'app-observable',\n  templateUrl: './observable.component.html',\n  styleUrls: ['./observable.component.css']\n}), __metadata(\"design:paramtypes\", [])], ObservableComponent);\nexport { ObservableComponent };","map":null,"metadata":{},"sourceType":"module"}