{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../../users/user.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../users/user.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/datepicker\";\nexport let UserFormComponent = /*#__PURE__*/(() => {\n  class UserFormComponent {\n    constructor(useservice, formbuilder) {\n      this.useservice = useservice;\n      this.formbuilder = formbuilder;\n      this.userform = this.formbuilder.group({\n        userid: this.formbuilder.control(''),\n        name: this.formbuilder.control('', Validators.required),\n        age: this.formbuilder.control('', Validators.required),\n        cnic: this.formbuilder.control('', Validators.required),\n        dob: this.formbuilder.control('', Validators.required)\n      });\n    }\n\n    ngOnInit() {}\n\n    submit(userform) {\n      console.log('submit');\n\n      if (this.useservice.userdata.userid) {\n        this.insertuser(userform);\n      } else {\n        this.updateuser(userform);\n      }\n    }\n\n    insertuser(userform) {\n      this.useservice.saveUser().subscribe(d => {\n        this.resetform(userform);\n        this.refreshdata();\n        console.log('data saved');\n      });\n    }\n\n    updateuser(userform) {\n      this.useservice.updateUser().subscribe(d => {\n        this.resetform(userform);\n        this.refreshdata();\n        console.log('update dataa');\n      });\n    }\n\n    resetform(userform) {\n      userform.form.reset(); //this.useservice.userdata = new User();\n    }\n\n    refreshdata() {\n      this.useservice.getUser().subscribe(data => {\n        this.useservice.listuser = data;\n      });\n    }\n\n  }\n\n  UserFormComponent.ɵfac = function UserFormComponent_Factory(t) {\n    return new (t || UserFormComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n\n  UserFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserFormComponent,\n    selectors: [[\"app-user-form\"]],\n    decls: 40,\n    vars: 3,\n    consts: [[\"color\", \"primary\"], [1, \"container\", \"mt-5\"], [1, \"container\"], [3, \"FormGroup\"], [\"type\", \"hidden\", \"matInput\", \"\", \"value\", \"\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"Enter Name\", \"value\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Enter Age\", \"value\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Enter Cnic\", \"value\", \"\"], [\"matInput\", \"\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\"]],\n    template: function UserFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\")(1, \"mat-toolbar\", 0)(2, \"span\");\n        i0.ɵɵtext(3, \"User Registration\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 2)(6, \"h1\");\n        i0.ɵɵtext(7, \"User Data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"form\", 3)(9, \"mat-form-field\");\n        i0.ɵɵelement(10, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"br\");\n        i0.ɵɵelementStart(12, \"mat-form-field\", 5)(13, \"mat-label\");\n        i0.ɵɵtext(14, \"User Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵelementStart(17, \"mat-form-field\", 5)(18, \"mat-label\");\n        i0.ɵɵtext(19, \"User Age\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"mat-form-field\", 5)(23, \"mat-label\");\n        i0.ɵɵtext(24, \"User Cnic\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"br\");\n        i0.ɵɵelementStart(27, \"mat-form-field\", 5)(28, \"mat-label\");\n        i0.ɵɵtext(29, \"Choose a date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 9);\n        i0.ɵɵelementStart(31, \"mat-hint\");\n        i0.ɵɵtext(32, \"MM/DD/YYYY\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"mat-datepicker-toggle\", 10)(34, \"mat-datepicker\", null, 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"br\");\n        i0.ɵɵelementStart(37, \"button\", 12);\n        i0.ɵɵtext(38, \"submit\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(39, \"hr\");\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(35);\n\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"FormGroup\", ctx.userform);\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"matDatepicker\", _r0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"for\", _r0);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm, i3.MatToolbar, i4.MatButton, i5.MatFormField, i5.MatHint, i5.MatLabel, i5.MatSuffix, i6.MatInput, i7.MatDatepicker, i7.MatDatepickerInput, i7.MatDatepickerToggle],\n    styles: [\".example-spacer[_ngcontent-%COMP%]{flex:1 1 auto}\"]\n  });\n  return UserFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}